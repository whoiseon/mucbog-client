import Head from 'next/head';
import BasicTemplate from '@/components/templates/BasicTemplate';
import styled from '@emotion/styled';
import PostViewer from '@/components/post/PostViewer';
import { GetServerSideProps } from 'next';
import { dehydrate, QueryClient } from '@tanstack/query-core';
import { getPostByTitle } from '@/lib/api/post';
import { useQuery } from '@tanstack/react-query';
import { Post } from '@/lib/api/types';
import { useRouter } from 'next/router';

export default function Home() {
  const { query } = useRouter();
  const { data: post } = useQuery<Post>({
    queryKey: ['posts', query.post_title],
    queryFn: () => getPostByTitle(query.post_title as string),
  });
  return (
    <>
      <Head>
        <title>{post?.title}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BasicTemplate>
        <Content>
          <PostViewer />
        </Content>
      </BasicTemplate>
    </>
  );
}

const Content = styled.div`
  max-width: 100%;
  width: 1280px;
  flex: 1;
  padding-left: 16px;
  padding-right: 16px;
  margin-left: auto;
  margin-right: auto;
`;

export const getServerSideProps: GetServerSideProps = async (context) => {
  const {
    req,
    query: { category, post_title },
  } = context;

  const queryKey = ['posts', category, post_title];

  const queryClient = new QueryClient();
  await queryClient.prefetchQuery(queryKey, () =>
    getPostByTitle(post_title as string),
  );

  if (!queryClient.getQueryData(queryKey)) {
    return {
      notFound: true,
    };
  }

  return {
    props: {
      dehydratedState: JSON.parse(JSON.stringify(dehydrate(queryClient))),
    },
  };
};
